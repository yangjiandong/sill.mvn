TODO
======

   1. 绑定rails

   jruby -S rake rails:freeze:edge RELEASE=2.2.2
   --No such file or directory - rails/REVISION
   jruby -S rake rails:freeze:gems
   --自动绑定了系统最新rails

ok   采用 bundle -- 还需实际使用
   bundle install --without=development test
   rake war

ok   2. jruby task not supported by jdbcsqlite3

   --解决
   http://blog.nicksieger.com/articles/2009/10/12/fresh-0-9-2-activerecord-jdbc-adapter-release
   --rails2
   jruby script/generate jdbc
   --rails3
   rails g jdbc

   3. jruby1.5.3 下 rake test 报错

   jruby1.5.3 本身bug
   http://jira.codehaus.org/browse/JRUBY-5112

   git clone git://github.com/jruby/jruby.git jruby.git
   cd jruby.git
   ant
   --生成lib, 重新安装 rails3 ,出现其他问题

    4. merb


    5. route 配置

    save\Ruby on Rails Guides  Rails Routing from the Outside In.htm

    --还需多实践


    6. 主键生成策略
    http://stackoverflow.com/questions/1200568/using-rails-how-can-i-set-my-primary-key-to-not-be-an-integer-typed-column

    uuid:
    http://vorleakchy.com/2009/10/using-uuid-as-primary-key-in-ruby-on-rails/

    http://hlee.javaeye.com/blog/406431

class Counter < ActiveRecord::Base
  set_table_name :counter

  def self.next_primary_key(col)
    current_value = Counter.first.read_attribute(col)
    new_value = current_value + 1
    Counter.connection.execute("UPDATE counter SET #{col} = #{new_value}")
    new_value
  end
end

?? before_validation_on_create

    7. 自定义表字段类型对应数据类型,

    如 datetime 是否可对应成 string, created_at,updated_at


ok    8. memcache 应用

    有空用下https://github.com/ikai/jruby-memcache-client

    采用dalli

ok    9. jrubyc

    http://kenai.com/projects/jruby/pages/JRubyCompiler

    AOT(Ahead of ● Time)
    http://www.flatws.cn/article/program/mysql/2010-08-23/8996.html

    --暂时不需要,werble已提供 compile,jar等功能

   10. 并发性

   http://www.blog.wordaligned.com/2010/02/17/concurrency-models-in-jruby-using-jetlang/

   gem install jretLang
   -- require 'java'
   -- require 'jretlang'

   11. menu layout, layout

   12. production 环境下extjs, css采用了cache后,
   Ext.BLANK_IMAGE_URL = 'javascripts/ext/resources/images/default/s.gif';
   没有图片

   13.  REST服务的安全性
   参考老方的资料:
   https://github.com/fangzxopensource/tailor/wiki/%E7%94%A8ExtJS%E5%BC%80%E5%8F%91%E5%AE%A2%E6%88%B7%E7%AB%AF-6-%E4%BD%BF%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E7%9A%84REST%E6%9C%8D%E5%8A%A1

    因为REST服务的无状态特性，导致无法知道当前的请求方是否可靠，所以不得不对每次请求进行验证。
    本项目要求采用 HTTP Basic Access Authentication验证方式。
    登录成功后，客户端按照下面的代码样子将验证信息写入，然后ExtJS会在每次调用REST服务时自动传送到服务器端：
    var up = divo.utils.base64.encode(username + "," + password)
    Ext.Ajax.defaultHeaders.Authorization = up

   14. 后台任务
   git://github.com/ncr/background-fu.git

   采用plugin 方式,rails plugin install git://github.com/ncr/background-fu.git 

--END

